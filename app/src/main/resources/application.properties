quarkus.application.name=hasura-gdc-jvm
quarkus.log.level=INFO
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n
#
quarkus.live-reload.instrumentation=true
#
quarkus.datasource.devservices.enabled=false
quarkus.opentelemetry.enabled=true
quarkus.otel.exporter.otlp.traces.endpoint=http://localhost:4317
quarkus.otel.propagators=tracecontext,baggage,b3multi
# Disable SQL sanitization, preserves whitespace + inline values (useful for debugging)
otel.instrumentation.common.db-statement-sanitizer.enabled=false
#
quarkus.datasource.jdbc.enable-metrics=true
quarkus.datasource.metrics.enabled=true
# Always serve log UI at /q/logging-manager-ui
# https://github.com/quarkiverse/quarkus-logging-manager
quarkus.logging-manager.base-path=logging-manager
quarkus.logging-manager.history-size=50
quarkus.logging-manager.always-included=true
quarkus.logging-manager.openapi.included=true
quarkus.logging-manager.openapi.tag=logging-manager
quarkus.logging-manager.ui.always-include=true
quarkus.logging-manager.ui.root-path=logging-manager-ui
#
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.theme=flattop
#
# Cache metrics (datasource + schema cache)
quarkus.cache.caffeine."datasource-cache".metrics-enabled=true
quarkus.cache.caffeine."schema-cache".metrics-enabled=true
# HTTP config
quarkus.http.port=8081
quarkus.http.test-port=8083
quarkus.http.access-log.enabled=true
#
%test.quarkus.log.level=DEBUG
# Evict DB connections after 10 minutes of inactivity
hasura.agroal.connection_pool_configuration.reap_timeout=PT10M
# Max lifetime for connections to 2 hours
hasura.agroal.connection_pool_configuration.max_lifetime=PT2H

%dev.quarkus.log.console.json=false
%test.quarkus.log.console.json=false

# Non-Quarkus Properties
# AWS Athena
athena.aws.accesskey=
athena.aws.secretkey=
athena.aws.s3.output.bucket=s3://athena-example-bucket/query-results
# Test Databases
#
# Set "testing.database.url.host" to "localhost" when running locally
#  or "host.docker.internal" when running in Docker
testing.database.url.host=localhost
testing.database.url.h2=jdbc:h2:mem:test;DB_CLOSE_DELAY=-1
testing.database.url.postgres=jdbc:postgresql://${testing.database.url.host}:5432/postgres?user=postgres&password=Password123#
testing.database.url.mysql=jdbc:mysql://${testing.database.url.host}:3306/Chinook?allowMultiQueries=true&user=root&password=Password123%23&disableMariaDbDriver=true
testing.database.url.maria=jdbc:mariadb://${testing.database.url.host}:3306/Chinook?user=root&password=Password123#
testing.database.url.oracle=jdbc:oracle:thin:@//${testing.database.url.host}:1521/XEPDB1?user=chinook&password=Password123#
testing.database.url.mongo=mongodb://root:Password123%23@${testing.database.url.host}:27017/sample?authSource=admin&authMechanism=SCRAM-SHA-256
testing.database.url.mongo_documentdb=jdbc:documentdb://root:Password123%23@${testing.database.url.host}:27017/sample?tls=false

datasets.enabled=true

snowflake.dataset.server.connection.host=xxxx.us-east-2.aws.snowflakecomputing.com
# Provide these as environment variables
snowflake.dataset.server.connection.warehouse=COMPUTE_WH
snowflake.dataset.server.connection.readOnlyDatasets=[\
  {"template": "Chinook", "user":"CI_CHINOOK","role":"CI_CHINOOK","password":"","database": "CI","schema":"CHINOOK"},\
  {"template": "Functions", "user":"CI_FUNCTIONS","role":"CI_FUNCTIONS","password":"","database": "CI","schema":"FUNCTIONS"}\
  ]

mysql.dataset.server.connection.host=0.0.0.0
mysql.dataset.server.connection.port=3306
mysql.dataset.server.connection.user=root
mysql.dataset.server.connection.password=Password123

oracle.dataset.server.connection.host=0.0.0.0
oracle.dataset.server.connection.port=1521
oracle.dataset.server.connection.user=system
oracle.dataset.server.connection.password=Password123
oracle.dataset.server.connection.instance=xe

mariadb.dataset.server.connection.host=0.0.0.0
mariadb.dataset.server.connection.port=3406
mariadb.dataset.server.connection.user=root
mariadb.dataset.server.connection.password=Password123
